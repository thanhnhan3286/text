Index: src/main/java/com/example/air_ticket_booking/controller/account/AccountController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.air_ticket_booking.controller.account;\r\n\r\nimport com.example.air_ticket_booking.config.JwtTokenUtil;\r\nimport com.example.air_ticket_booking.config.JwtUserDetails;\r\nimport com.example.air_ticket_booking.dto.account.AccountDto;\r\nimport com.example.air_ticket_booking.model.customer.Customer;\r\nimport com.example.air_ticket_booking.reponse.JwtRequest;\r\nimport com.example.air_ticket_booking.reponse.JwtResponse;\r\nimport com.example.air_ticket_booking.service.account.impl.AccountService;\r\nimport com.example.air_ticket_booking.service.customer.ICustomerService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.authentication.BadCredentialsException;\r\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.GrantedAuthority;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n/**\r\n * Created by: NhanDT\r\n * Date created: 10/08/2023\r\n * Function: Login , SignUp\r\n *\r\n * @param\r\n * @return\r\n */\r\n@CrossOrigin(origins = \"*\")\r\n@RestController\r\n@RequestMapping(\"/api/account\")\r\npublic class AccountController {\r\n    @Autowired\r\n    private AuthenticationManager authenticationManager;\r\n    @Autowired\r\n    private JwtTokenUtil jwtTokenUtil;\r\n    @Autowired\r\n    private AccountService accountService;\r\n    @Autowired\r\n    private ICustomerService customerService;\r\n\r\n\r\n    class ErrorInfo {\r\n        private String error;\r\n        private Long id;\r\n\r\n\r\n    }\r\n    @PostMapping(\"/authenticate\")\r\n    public ResponseEntity<?> loginAuthentication(@RequestBody JwtRequest authenticationRequest) throws Exception {\r\n        try {\r\n            Authentication authentication = authenticationManager.authenticate(\r\n                    new UsernamePasswordAuthenticationToken(authenticationRequest.getUsername(), authenticationRequest.getPassword())\r\n            );\r\n            SecurityContextHolder.getContext().setAuthentication(authentication);\r\n            JwtUserDetails principal = (JwtUserDetails) authentication.getPrincipal();\r\n            GrantedAuthority authority = principal.getAuthorities().stream().findFirst().orElse(null);\r\n            final String token = jwtTokenUtil.generateToken(principal.getUsername());\r\n\r\n            return ResponseEntity.ok(new JwtResponse(token, principal.getUsername(), authority != null ? authority.getAuthority() : null));\r\n        } catch (BadCredentialsException e) {\r\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"Đăng nhập thất bại!!!\");\r\n        }\r\n    }\r\n\r\n    public ResponseEntity<?> saveCustomer(@RequestBody Customer customer) {\r\n        customerService.saveCustomer(customer);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n    @PostMapping(\"/signup\")\r\n    public ResponseEntity<?> signUp(@RequestBody AccountDto accountDto){\r\n        if (accountService.signUp(accountDto)){\r\n            return new ResponseEntity<>(HttpStatus.OK);\r\n        }\r\n//        String encoderPassword = passwordEncoder.encode(accountDto.getPassword());\r\n        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/air_ticket_booking/controller/account/AccountController.java b/src/main/java/com/example/air_ticket_booking/controller/account/AccountController.java
--- a/src/main/java/com/example/air_ticket_booking/controller/account/AccountController.java	(revision 3ee4f275e837ede8ea4f6c969b5a11df687d108e)
+++ b/src/main/java/com/example/air_ticket_booking/controller/account/AccountController.java	(date 1691689366076)
@@ -65,10 +65,6 @@
         }
     }
 
-    public ResponseEntity<?> saveCustomer(@RequestBody Customer customer) {
-        customerService.saveCustomer(customer);
-        return new ResponseEntity<>(HttpStatus.OK);
-    }
     @PostMapping("/signup")
     public ResponseEntity<?> signUp(@RequestBody AccountDto accountDto){
         if (accountService.signUp(accountDto)){
